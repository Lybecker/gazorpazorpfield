
variables:
  buildConfiguration: 'Release'
  buildProjects: '**/*.csproj'
  testProjects: '**/*[Tt]ests/*.csproj'
  testLogger: xunit
  testAdapterPath: .
  publishProjects: 'src/CentralFiniteCurve.Gazorpazorpfield.API/CentralFiniteCurve.Gazorpazorpfield.API.csproj'
  publishOutput: $(Build.ArtifactStagingDirectory)
  dockerfilesSourceFolder: '$(Build.SourcesDirectory)/src/'
  dockerfilesTargetFolder: '$(Build.ArtifactStagingDirectory)/CentralFiniteCurve.Gazorpazorpfield.API'
  publishFolder: $(Build.ArtifactStagingDirectory)
  artifactName: 'drop'

steps:
- task: UseDotNet@2
  displayName: 'Set up .NET Core 3.0'
  inputs:
    packageType: sdk
    version: 3.0.x

- task: DotNetCoreCLI@2
  displayName: 'Restore packages'
  inputs: 
    command: 'restore'
    projects: '$(buildProjects)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build projects'
  inputs: 
    command: 'build'
    projects: '$(buildProjects)'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: '$(testProjects)'
    arguments: '--no-build --configuration $(buildConfiguration) --logger:$(testLogger) --test-adapter-path:$(testAdapterPath)'
    publishTestResults: true

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(publishProjects)'
    arguments: '--configuration $(buildConfiguration) --no-build --output $(publishOutput)'
    zipAfterPublish: false

- task: CopyFiles@2
  displayName: 'Copy Docker files to Build Artifacts'
  inputs:
    SourceFolder: '$(dockerfilesSourceFolder)'
    Contents: |
      Dockerfile.AzureDevOps
      .dockerignore
    TargetFolder: '$(dockerfilesTargetFolder)'

- publish: '$(publishFolder)'
  displayName: 'Publish Build Artifacts'
  artifact: '$(artifactName)'
  condition: succeededOrFailed()
